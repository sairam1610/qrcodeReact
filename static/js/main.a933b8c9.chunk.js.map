{"version":3,"sources":["QRCode.js","Android.js","App.js","reportWebVitals.js","index.js"],"names":["IOSQR","props","cameraCallBack","setState","showQRScanner","state","delay","result","handleScan","bind","window","gotCameraPermisssion","this","Android","getCameraPermission","data","console","log","err","error","className","style","height","width","facingMode","onError","handleError","onScan","Component","AndroidQR","App","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sQAyDeA,E,kDApDb,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IAcRC,eAAe,WACb,EAAKC,SAAS,CAACC,eAAc,KAd7B,EAAKC,MAAQ,CACXC,MAAO,IACPC,OAAQ,IAGV,EAAKC,WAAa,EAAKA,WAAWC,KAAhB,gBAPF,E,qDAUlB,WACEC,OAAOC,qBAAuBC,KAAKV,eACnCQ,OAAOG,SAAYH,OAAOG,QAAQC,oBAAoB,0B,wBAOxD,SAAWC,GACTC,QAAQC,IAAIF,GACZH,KAAKT,SAAS,CACZI,OAAQQ,M,yBAGZ,SAAYG,GACVF,QAAQG,MAAMD,K,oBAEhB,WAME,OACI,gCACE,qBAAKE,UAAU,QAAf,uCACI,qBAAKA,UAAU,aAAf,SACE,cAAC,IAAD,CACEd,MAAOM,KAAKP,MAAMC,MAClBe,MAXO,CACnBC,OAAQ,IACRC,MAAO,KAUKC,WAAY,cACZC,QAASb,KAAKc,YACdC,OAAQf,KAAKJ,eAGpBI,KAAKP,MAAME,QAAU,mBAAGa,UAAU,iBAAb,SAA+BR,KAAKP,MAAME,gB,GA/CtDqB,aCqDLC,E,kDApDb,WAAY5B,GAAO,IAAD,8BAChB,cAAMA,IAcRC,eAAe,WACb,EAAKC,SAAS,CAACC,eAAc,KAd7B,EAAKC,MAAQ,CACXC,MAAO,IACPC,OAAQ,IAGV,EAAKC,WAAa,EAAKA,WAAWC,KAAhB,gBAPF,E,qDAUlB,WACEC,OAAOC,qBAAuBC,KAAKV,eACnCQ,OAAOG,SAAYH,OAAOG,QAAQC,oBAAoB,0B,wBAOxD,SAAWC,GACTC,QAAQC,IAAIF,GACZH,KAAKT,SAAS,CACZI,OAAQQ,M,yBAGZ,SAAYG,GACVF,QAAQG,MAAMD,K,oBAEhB,WAME,OACI,gCACE,qBAAKE,UAAU,QAAf,2CACIR,KAAKP,MAAMD,eAAiB,qBAAKgB,UAAU,aAAf,SAC1B,cAAC,IAAD,CACEd,MAAOM,KAAKP,MAAMC,MAClBe,MAXO,CACnBC,OAAQ,IACRC,MAAO,KAUKC,WAAY,cACZC,QAASb,KAAKc,YACdC,OAAQf,KAAKJ,eAGpBI,KAAKP,MAAME,QAAU,mBAAGa,UAAU,iBAAb,SAA+BR,KAAKP,MAAME,gB,GA/ClDqB,a,eCwBTE,E,4JAhBb,WACE,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,kCAAZ,SACI,cAAC,EAAD,MAEJ,cAAC,IAAD,CAAOC,OAAK,EAACD,KAAK,IAAlB,SACE,cAAClB,EAAD,e,GATMe,aCCHK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a933b8c9.chunk.js","sourcesContent":["import './App.css';\nimport React, { Component } from 'react';\nimport QrReader from 'react-qr-reader';\n\nclass IOSQR extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      delay: 300,\n      result: '',\n    }\n\n    this.handleScan = this.handleScan.bind(this)\n  }\n\n  componentDidMount(){\n    window.gotCameraPermisssion = this.cameraCallBack;\n    window.Android &&  window.Android.getCameraPermission('gotCameraPermisssion')\n  }\n\n  cameraCallBack=()=>{\n    this.setState({showQRScanner:true})\n  }\n\n  handleScan(data){\n    console.log(data)\n    this.setState({\n      result: data,\n    })\n  }\n  handleError(err){\n    console.error(err)\n  }\n  render(){\n    const previewStyle = {\n      height: 400,\n      width: 400,\n    }\n\n    return(\n        <div>\n          <div className=\"title\">Scan Flipkart QR Code IOS</div>\n              <div className=\"qr-wrapper\">\n                <QrReader\n                  delay={this.state.delay}\n                  style={previewStyle}\n                  facingMode={\"environment\"}\n                  onError={this.handleError}\n                  onScan={this.handleScan}\n                  />\n              </div>\n          {this.state.result && <p className=\"qr-code-result\">{this.state.result}</p>}\n        </div>\n    )\n  }\n}\n\nexport default IOSQR;\n","import './App.css';\nimport React, { Component } from 'react';\nimport QrReader from 'react-qr-reader';\n\nclass AndroidQR extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      delay: 300,\n      result: '',\n    }\n\n    this.handleScan = this.handleScan.bind(this)\n  }\n\n  componentDidMount(){\n    window.gotCameraPermisssion = this.cameraCallBack;\n    window.Android &&  window.Android.getCameraPermission('gotCameraPermisssion')\n  }\n\n  cameraCallBack=()=>{\n    this.setState({showQRScanner:true})\n  }\n\n  handleScan(data){\n    console.log(data)\n    this.setState({\n      result: data,\n    })\n  }\n  handleError(err){\n    console.error(err)\n  }\n  render(){\n    const previewStyle = {\n      height: 400,\n      width: 400,\n    }\n\n    return(\n        <div>\n          <div className=\"title\">Scan Flipkart QR Code Android</div>\n             {this.state.showQRScanner && <div className=\"qr-wrapper\">\n                <QrReader\n                  delay={this.state.delay}\n                  style={previewStyle}\n                  facingMode={\"environment\"}\n                  onError={this.handleError}\n                  onScan={this.handleScan}\n                  />\n              </div>} \n          {this.state.result && <p className=\"qr-code-result\">{this.state.result}</p>}\n        </div>\n    )\n  }\n}\n\nexport default AndroidQR;\n","import './App.css';\nimport React, { Component } from 'react';\nimport IOSQR from './QRCode';\nimport AndroidQR from './Android';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nclass App extends Component {\n  render(){\n    return(\n      <Router>\n        <Switch>\n          <Route path=\"/rv/fintech/khaata/landing-page\">\n              <IOSQR></IOSQR>\n          </Route>\n          <Route exact path=\"/\">\n            <AndroidQR></AndroidQR>\n          </Route>\n        </Switch>\n      </Router>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}